<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sinau.dao.AdminDao">

	<select id="getList" parameterType="HashMap"
		resultType="com.sinau.dto.AdminDto">
		<![CDATA[
		SELECT rownum AS m_nmnum,
		m_email, m_name, m_pwd, m_phone,
		m_birth, m_license, m_group, m_state FROM MEMBER
		WHERE RONUM >= (${pageNum}*${cnt})-(${cnt}-1)
			AND RONUM <= ${pageNum}*${cnt}
			AND m_state=#{state} and m_group='nm'
		]]>
	</select>
	
	<select id="getBoardCount" resultType="Integer">
		SELECT COUNT(*) FROM member;
	</select>


	<select id="getMemStateNm" resultType="com.sinau.dto.AdminDto">
		select rownum AS m_nmnum,
		m_email, m_name, m_pwd, m_phone,
		m_birth, m_license, m_group, m_state from member
		where m_state=#{state} and m_group='nm'
	</select>
	<select id="getMemStateDm" resultType="com.sinau.dto.AdminDto">
		select rownum AS m_dmnum,
		m_email, m_name, m_pwd, m_phone,
		m_birth, m_license, m_group, m_state from member
		where m_state=#{state} and m_group='dm'
	</select>
	<select id="getMemStateCm" resultType="com.sinau.dto.AdminDto">
		select rownum AS m_cmnum,
		m_email, m_name, m_pwd, m_phone,
		m_birth, m_license, m_group, m_state from member
		where m_state=#{state} and m_group='cm'
	</select>

	<!-- 전체멤버 -->
	<select id="getAllMem" resultType="com.sinau.dto.AdminDto">
		select * from member;
	</select>

	<!-- 메일체크 -->
	<select id="memberCheck" parameterType="String"
		resultType="String">
		SELECT M_EMAIL
		FROM MEMBER
		WHERE M_EMAIL = #{m_email}
	</select>
	<!-- 회원 삭제 -->
	<delete id="getMemDel" parameterType="String">
		DELETE FROM member
		WHERE
		M_EMAIL=#{email}
	</delete>
	<!-- 강의 삭제 -->
	<delete id="getLecDel" parameterType="String">
		DELETE FROM ONLINECLASS
		WHERE ONC_CODE = #{code}
	</delete>
	<delete id="getOfDel" parameterType="String">
		DELETE FROM OFFCLASS
		WHERE OFC_CODE = #{code}
	</delete>
	<delete id="getYDel" parameterType="String">
		DELETE FROM YOUTUBE_CLASS
		WHERE Y_CODE = #{code}
	</delete>
	<!-- 판매글 삭제 -->
	<delete id="getSaleDel" parameterType="String">
		DELETE FROM PRODUCT
		WHERE
		P_CODE = #{code}
	</delete>
	<!-- 리뷰 글 삭제 -->
	<delete id="getReDel" parameterType="String">
		DELETE FROM productreview
		WHERE PRV_CODE = #{code}
	</delete>
	<!-- 신고 삭제 (안씀)-->
	<delete id="getWDel" parameterType="String">
		DELETE FROM warning
		WHERE
		w_code = #{code}
	</delete>

	<!-- 회원 승인 -->
	<update id="getstate" parameterType="String">
		update member set m_state =
		2
		where m_email = #{email}
	</update>
	<!-- 신고 비승인 -->
	<update id="getWState" parameterType="String">
		update warning set w_state
		= 0
		where w_code = #{code}
	</update>
	<!-- qna 답글 업데이트 -->
	<update id="getQnaInsert" parameterType="String">
		UPDATE QUESTION set 
		q_anfield = #{content},
		q_andate = sysdate
		where q_code = #{code}
	</update>
		<insert id="youtubeWrite"
		parameterType="com.sinau.dto.YoutubeClassDto"
		useGeneratedKeys="true"
		keyProperty="y_code">
		<selectKey keyProperty="y_code"
			resultType="String" order="BEFORE">
				SELECT 'Y_'||SEQ_Y.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO youtube_class
		VALUES(#{y_code},#{y_title},#{y_subtitle},#{y_content},#{y_profile},#{y_url}, 
		#{y_userurl}, sysdate, default, #{y_videosoure}, #{y_cts_code})
	</insert>
	<insert id="fileInsert" parameterType="HashMap">
		INSERT INTO files
		VALUES('F_'||SEQ_F.NEXTVAL,
			#{oriFileName}, #{sysFileName}, #{y_code}, #{y_cts_code})
	</insert>

</mapper>